@page "/register"
@inject IAuthService AuthService


<PageTitle>Register</PageTitle>
<h3>Register</h3>



<EditForm Model="@user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"/>
        <ValidationMessage For="@(()=>user.Email)"/>
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText type="password" id="password" @bind-Value="user.Password" class="form-control" />
        <ValidationMessage For="@(()=>user.Password)" />

    </div>
    <div class="mb-3">
        <label for="confirmpassword">Confirm Password</label>
        <InputText type="password" id="confirmpassword" @bind-Value="user.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(()=>user.ConfirmPassword)" />

    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@messageCssClass">@errorMessage</div>
</EditForm>
@code {
    UserRegister user = new UserRegister();

    string errorMessage = string.Empty;
    string messageCssClass = string.Empty;

    public async Task HandleRegistration()
    {
       
        var result = await AuthService.Register(user);
        errorMessage = result.Message;

        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";

    }
}
